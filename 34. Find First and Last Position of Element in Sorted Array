class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
         return {firstNum(nums,target),lastNum(nums,target)};
       
    }
    int firstNum(vector<int>& nums, int target) {
        int start=0;
        int end=nums.size()-1;
        int mid = start+(end-start)/2;
        int answer=-1;
        while(start <= end){
            int mid = start+(end-start)/2;
            if(nums[mid]==target){
                answer=mid;
                end=mid-1;
            }
            if(target<nums[mid]){
                end=mid-1;
            }
            else if(target>nums[mid]){
                start=mid+1;
            }

        }
        return answer;
    }

    int lastNum(vector<int>& nums, int target) {
        int start=0;
        int end=nums.size()-1;
        int mid = (end-start)/2;
        int answer=-1;
        while(start <= end){
            int mid = start+(end-start)/2;
            if(nums[mid]==target){
                answer=mid;
                start=mid+1;
            }
            if(target<nums[mid]){
                end=mid-1;
            }
            else if(target>nums[mid]){
                start=mid+1;
            }

        }
        return answer;
    }

};
